(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))i(l);new MutationObserver(l=>{for(const c of l)if(c.type==="childList")for(const f of c.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&i(f)}).observe(document,{childList:!0,subtree:!0});function a(l){const c={};return l.integrity&&(c.integrity=l.integrity),l.referrerPolicy&&(c.referrerPolicy=l.referrerPolicy),l.crossOrigin==="use-credentials"?c.credentials="include":l.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function i(l){if(l.ep)return;l.ep=!0;const c=a(l);fetch(l.href,c)}})();class ze extends Map{set(t,a){return super.set(t,a),a}}class ye extends WeakMap{set(t,a){return super.set(t,a),a}}/*! (c) Andrea Giammarchi - ISC */const qe=/^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i,Je=/<([a-z]+[a-z0-9:._-]*)([^>]*?)(\/?)>/g,We=/([^\s\\>"'=]+)\s*=\s*(['"]?)\x01/g,Ye=/[\x01\x02]/g,Ve=(e,t,a)=>{let i=0;return e.join("").trim().replace(Je,(l,c,f,L)=>{let S=c+f.replace(We,"=$2$1").trimEnd();return L.length&&(S+=a||qe.test(c)?" /":"></"+c),"<"+S+">"}).replace(Ye,l=>l===""?"<!--"+t+i+++"-->":t+i++)},Ke=1,Ee=111,Ze=({firstChild:e,lastChild:t})=>{const a=document.createRange();return a.setStartAfter(e),a.setEndAfter(t),a.deleteContents(),e},Qe=(e,t)=>e.nodeType===Ee?1/t<0?t?Ze(e):e.lastChild:t?e.valueOf():e.firstChild:e,et=e=>{const{firstChild:t,lastChild:a}=e;if(t===a)return a||e;const{childNodes:i}=e,l=[...i];return{ELEMENT_NODE:Ke,nodeType:Ee,firstChild:t,lastChild:a,valueOf(){return i.length!==l.length&&e.append(...l),e}}},{isArray:tt}=Array,at=e=>t=>{for(const a in t){const i=a==="role"?a:`aria-${a}`,l=t[a];l==null?e.removeAttribute(i):e.setAttribute(i,l)}},he=e=>e==null?e:e.valueOf(),it=(e,t)=>{let a,i=!0;const l=document.createAttributeNS(null,t);return c=>{const f=he(c);a!==f&&((a=f)==null?i||(e.removeAttributeNode(l),i=!0):(l.value=f,i&&(e.setAttributeNodeNS(l),i=!1)))}},nt=(e,t,a)=>i=>{const l=!!he(i);a!==l&&((a=l)?e.setAttribute(t,""):e.removeAttribute(t))},rt=({dataset:e})=>t=>{for(const a in t){const i=t[a];i==null?delete e[a]:e[a]=i}},Le=(e,t)=>{let a,i,l=t.slice(2);return!(t in e)&&(i=t.toLowerCase())in e&&(l=i.slice(2)),c=>{const f=tt(c)?c:[c,!1];a!==f[0]&&(a&&e.removeEventListener(l,a,f[1]),(a=f[0])&&e.addEventListener(l,a,f[1]))}},ot=e=>{let t;return a=>{t!==a&&(t=a,typeof a=="function"?a(e):a.current=e)}},st=(e,t)=>t==="dataset"?rt(e):a=>{e[t]=a},lt=e=>{let t;return a=>{const i=he(a);t!=i&&(t=i,e.textContent=i??"")}},ct=(e,t,a,i,l)=>{const c=a.length;let f=t.length,L=c,S=0,y=0,C=null;for(;S<f||y<L;)if(f===S){const I=L<c?y?i(a[y-1],-0).nextSibling:i(a[L-y],0):l;for(;y<L;)e.insertBefore(i(a[y++],1),I)}else if(L===y)for(;S<f;)(!C||!C.has(t[S]))&&e.removeChild(i(t[S],-1)),S++;else if(t[S]===a[y])S++,y++;else if(t[f-1]===a[L-1])f--,L--;else if(t[S]===a[L-1]&&a[y]===t[f-1]){const I=i(t[--f],-1).nextSibling;e.insertBefore(i(a[y++],1),i(t[S++],-1).nextSibling),e.insertBefore(i(a[--L],1),I),t[f]=a[L]}else{if(!C){C=new Map;let I=y;for(;I<L;)C.set(a[I],I++)}if(C.has(t[S])){const I=C.get(t[S]);if(y<I&&I<L){let P=S,u=1;for(;++P<f&&P<L&&C.get(t[P])===I+u;)u++;if(u>I-y){const b=i(t[S],0);for(;y<I;)e.insertBefore(i(a[y++],1),b)}else e.replaceChild(i(a[y++],1),i(t[S++],-1))}else S++}else e.removeChild(i(t[S++],-1))}return a},{isArray:Oe,prototype:pt}=Array,{indexOf:dt}=pt,{createDocumentFragment:mt,createElement:ft,createElementNS:ut,createTextNode:yt,createTreeWalker:ht,importNode:gt}=new Proxy({},{get:(e,t)=>document[t].bind(document)}),St=e=>{const t=ft("template");return t.innerHTML=e,t.content};let re;const vt=e=>{re||(re=ut("http://www.w3.org/2000/svg","svg")),re.innerHTML=e;const t=mt();return t.append(...re.childNodes),t},xt=(e,t)=>t?vt(e):St(e),Pt=({childNodes:e},t)=>e[t],J=(e,t,a)=>ct(e.parentNode,t,a,Qe,e),bt=e=>{let t,a,i=[];const l=c=>{switch(typeof c){case"string":case"number":case"boolean":t!==c&&(t=c,a||(a=yt("")),a.data=c,i=J(e,i,[a]));break;case"object":case"undefined":if(c==null){t!=c&&(t=c,i=J(e,i,[]));break}if(Oe(c)){t=c,c.length===0?i=J(e,i,[]):typeof c[0]=="object"?i=J(e,i,c):l(String(c));break}if(t!==c)if("ELEMENT_NODE"in c)t=c,i=J(e,i,c.nodeType===11?[...c.childNodes]:[c]);else{const f=c.valueOf();f!==c&&l(f)}break;case"function":l(c(e));break}};return l},Ct=(e,t)=>{switch(t[0]){case"?":return nt(e,t.slice(1),!1);case".":return st(e,t.slice(1));case"@":return Le(e,"on"+t.slice(1));case"o":if(t[1]==="n")return Le(e,t)}switch(t){case"ref":return ot(e);case"aria":return at(e)}return it(e,t)};function Rt(e){const{type:t,path:a}=e,i=a.reduceRight(Pt,this);return t==="node"?bt(i):t==="attr"?Ct(i,e.name):lt(i)}const ue=e=>{const t=[];let{parentNode:a}=e;for(;a;)t.push(dt.call(a.childNodes,e)),e=a,{parentNode:a}=e;return t},W="isµ",Ae=new ye,Lt=/^(?:textarea|script|style|title|plaintext|xmp)$/,Q=()=>({stack:[],entry:null,wire:null}),At=(e,t)=>{const{content:a,updates:i}=Dt(e,t);return{type:e,template:t,content:a,updates:i,wire:null}},It=(e,t)=>{const a=e==="svg",i=Ve(t,W,a),l=xt(i,a),c=ht(l,129),f=[],L=t.length-1;let S=0,y=`${W}${S}`;for(;S<L;){const C=c.nextNode();if(!C)throw`bad template: ${i}`;if(C.nodeType===8)C.data===y&&(f.push({type:"node",path:ue(C)}),y=`${W}${++S}`);else{for(;C.hasAttribute(y);)f.push({type:"attr",path:ue(C),name:C.getAttribute(y)}),C.removeAttribute(y),y=`${W}${++S}`;Lt.test(C.localName)&&C.textContent.trim()===`<!--${y}-->`&&(C.textContent="",f.push({type:"text",path:ue(C)}),y=`${W}${++S}`)}}return{content:l,nodes:f}},Dt=(e,t)=>{const{content:a,nodes:i}=Ae.get(t)||Ae.set(t,It(e,t)),l=gt(a,!0),c=i.map(Rt,l);return{content:l,updates:c}},se=(e,{type:t,template:a,values:i})=>{const l=Fe(e,i);let{entry:c}=e;(!c||c.template!==a||c.type!==t)&&(e.entry=c=At(t,a));const{content:f,updates:L,wire:S}=c;for(let y=0;y<l;y++)L[y](i[y]);return S||(c.wire=et(f))},Fe=({stack:e},t)=>{const{length:a}=t;for(let i=0;i<a;i++){const l=t[i];l instanceof le?t[i]=se(e[i]||(e[i]=Q()),l):Oe(l)?Fe(e[i]||(e[i]=Q()),l):e[i]=null}return a<e.length&&e.splice(a),a};class le{constructor(t,a,i){this.type=t,this.template=a,this.values=i}}const Be=e=>{const t=new ye,a=i=>(l,...c)=>se(i,{type:e,template:l,values:c});return Object.assign((i,...l)=>new le(e,i,l),{for(i,l){const c=t.get(i)||t.set(i,new ze);return c.get(l)||c.set(l,a(Q()))},node:(i,...l)=>se(Q(),new le(e,i,l)).valueOf()})},Ie=new ye,Tt=(e,t)=>{const a=typeof t=="function"?t():t,i=Ie.get(e)||Ie.set(e,Q()),l=a instanceof le?se(i,a):a;return l!==i.wire&&(i.wire=l,e.replaceChildren(l.valueOf())),e},N=Be("html");Be("svg");const De=e=>{let t;const a=new Set,i=(S,y)=>{const C=typeof S=="function"?S(t):S;if(!Object.is(C,t)){const I=t;t=y??typeof C!="object"?C:Object.assign({},t,C),a.forEach(P=>P(t,I))}},l=()=>t,L={setState:i,getState:l,subscribe:S=>(a.add(S),()=>a.delete(S)),destroy:()=>{a.clear()}};return t=e(i,l,L),L},wt=e=>e?De(e):De,Te={img:{width:788,img:void 0,x:0,y:0},designer:"Viv",artist:"AI Comic Factory",classType:"terran",type:"white",cardType:"Creature - Monkey Cleric",rank:"1",value:"1/2",cost:[[1,0],[4,2]],name:"Monk-ey",showSecondRuleset:!1,ruleSet:""},ge=wt((e,t)=>({stats:Te,setImage:a=>{const i=t().stats;i.img.img=a,e({stats:i})},setImageX:a=>{const i=t().stats;i.img.x+=a,e({stats:i})},setImageY:a=>{const i=t().stats;i.img.y+=a,e({stats:i})},setImageWidth:a=>{const i=t().stats;i.img.width+=a,e({stats:i})},updateType:a=>{const i=t().stats;i.type=a,e({stats:i})},updateCardType:a=>{const i=t().stats;i.cardType=a,e({stats:i})},updateRank:a=>{const i=t().stats;i.rank=a,e({stats:i})},updateRules:a=>{const i=t().stats;i.rules=a,e({stats:i})},updateValue:a=>{const i=t().stats;i.value=a,e({stats:i})},updateCost:a=>{const i=t().stats;i.cost.push(a),e({stats:i})},deleteCost:a=>{const i=t().stats;i.cost.pop(),e({stats:i})},updateName:a=>{const i=t().stats;i.name=a,e({stats:i})},updateDesigner:a=>{const i=t().stats;i.designer=a,e({stats:i})},updateArtist:a=>{const i=t().stats;i.artist=a,e({stats:i})},addSelect:(a,i)=>{const l=t().stats;let c;i==="trigger"&&(c=triggerOptions[0]),i==="target"&&(l.target==="player"?c=targetPlayerOptions[0]:c=targetCardOptions[0]),i==="action"&&(l.target==="player"?c=actionPlayerOptions[0]:c=actionCardOptions[0]),l.rules[a][i].push(c),e({stats:l})},reset:()=>{e({cards:[Te]})}})),Y=({title:e,placeholder:t,value:a,handleKeyPress:i})=>N`
<div>
    ${e}${e?":":""} <input type="text" placeholder="${t}" value="${a}" onkeyup=${i}>
</div>
`,Gt=({values:e,title:t,currentSelection:a,handleOnChange:i})=>N`
    <div class="select-wrapper">
        ${t}${t?":":""}
        <select onchange=${i}>
            ${e.map(l=>N`<option value="${l[0]}" ?selected=${a===l[0]}>${l[1]}</option>`)}
        </select>          
    </div>
`,{getState:oe}=ge,kt=async()=>{const e=await oe().setImageX,t=await oe().setImageY,a=await oe().setImageWidth;function i(f){const L=new FileReader;L.onload=function(S){const y=new Image;y.onload=function(){oe().setImage(y)},y.src=S.target.result},L.readAsDataURL(f.target.files[0])}const l={left:()=>{e(-1)},up:()=>{t(-1)},right:()=>{e(1)},down:()=>{t(1)},leftX2:()=>{e(-20)},upX2:()=>{t(-20)},rightX2:()=>{e(20)},downX2:()=>{t(20)}},c={bigger:()=>{a(1)},biggerX2:()=>{a(20)},smaller:()=>{a(-1)},smallerX2:()=>{a(-20)}};return N`
    <div>
        Image upload: <input type="file" onchange=${i} name="imageLoader"/>
        <div class="image-position-buttons-wrapper" onclick=${f=>l[f.target.dataset.move]()}> Position: 
            <button data-move="left">←</button>
            <button data-move="up">↑</button>
            <button data-move="right">→</button>
            <button data-move="down">↓</button>
            <button data-move="leftX2">↞</button>
            <button data-move="upX2">↟</button>
            <button data-move="rightX2">↠</button>
            <button data-move="downX2">↡</button>
        </div>
        <div class="image-size-buttons-wrapper" onclick=${f=>c[f.target.dataset.size]()}> Size: 
            <button data-size="bigger">+</button>
            <button data-size="biggerX2">++</button>
            <button data-size="smaller">-</button>
            <button data-size="smallerX2">--</button>
        </div>
    </div>

    `};var we={exports:{}};(function(e,t){(function(){var a={};a.version="1.0.4",a.remove=function(n){var r=!1;if(n.slice(0,2)!="ÿØ")if(n.slice(0,23)=="data:image/jpeg;base64,"||n.slice(0,22)=="data:image/jpg;base64,")n=P(n.split(",")[1]),r=!0;else throw"Given data is not jpeg.";var o=B(n),p=o.filter(function(s){return!(s.slice(0,2)=="ÿá"&&s.slice(4,10)=="Exif\0\0")}),d=p.join("");return r&&(d="data:image/jpeg;base64,"+I(d)),d},a.insert=function(n,r){var o=!1;if(n.slice(0,6)!="Exif\0\0")throw"Given data is not exif.";if(r.slice(0,2)!="ÿØ")if(r.slice(0,23)=="data:image/jpeg;base64,"||r.slice(0,22)=="data:image/jpg;base64,")r=P(r.split(",")[1]),o=!0;else throw"Given data is not jpeg.";var p="ÿá"+u(">H",[n.length+2])+n,d=B(r),s=Ue(d,p);return o&&(s="data:image/jpeg;base64,"+I(s)),s},a.load=function(n){var r;if(typeof n=="string")if(n.slice(0,2)=="ÿØ")r=n;else if(n.slice(0,23)=="data:image/jpeg;base64,"||n.slice(0,22)=="data:image/jpg;base64,")r=P(n.split(",")[1]);else if(n.slice(0,4)=="Exif")r=n.slice(6);else throw"'load' gots invalid file data.";else throw"'load' gots invalid type argument.";var o={"0th":{},Exif:{},GPS:{},Interop:{},"1st":{},thumbnail:null},p=new C(r);if(p.tiftag===null)return o;p.tiftag.slice(0,2)=="II"?p.endian_mark="<":p.endian_mark=">";var d=b(p.endian_mark+"L",p.tiftag.slice(4,8))[0];o["0th"]=p.get_ifd(d,"0th");var s=o["0th"].first_ifd_pointer;if(delete o["0th"].first_ifd_pointer,34665 in o["0th"]&&(d=o["0th"][34665],o.Exif=p.get_ifd(d,"Exif")),34853 in o["0th"]&&(d=o["0th"][34853],o.GPS=p.get_ifd(d,"GPS")),40965 in o.Exif&&(d=o.Exif[40965],o.Interop=p.get_ifd(d,"Interop")),s!="\0\0\0\0"&&(d=b(p.endian_mark+"L",s)[0],o["1st"]=p.get_ifd(d,"1st"),513 in o["1st"]&&514 in o["1st"])){var m=o["1st"][513]+o["1st"][514],v=p.tiftag.slice(o["1st"][513],m);o.thumbnail=v}return o},a.dump=function(n){var r=8,o=i(n),p="Exif\0\0MM\0*\0\0\0\b",d=!1,s=!1,m=!1,v=!1,g,h,A,R,_;"0th"in o?g=o["0th"]:g={},"Exif"in o&&Object.keys(o.Exif).length||"Interop"in o&&Object.keys(o.Interop).length?(g[34665]=1,d=!0,h=o.Exif,"Interop"in o&&Object.keys(o.Interop).length?(h[40965]=1,m=!0,A=o.Interop):Object.keys(h).indexOf(a.ExifIFD.InteroperabilityTag.toString())>-1&&delete h[40965]):Object.keys(g).indexOf(a.ImageIFD.ExifTag.toString())>-1&&delete g[34665],"GPS"in o&&Object.keys(o.GPS).length?(g[a.ImageIFD.GPSTag]=1,s=!0,R=o.GPS):Object.keys(g).indexOf(a.ImageIFD.GPSTag.toString())>-1&&delete g[a.ImageIFD.GPSTag],"1st"in o&&"thumbnail"in o&&o.thumbnail!=null&&(v=!0,o["1st"][513]=1,o["1st"][514]=1,_=o["1st"]);var M=y(g,"0th",0),w=M[0].length+d*12+s*12+4+M[1].length,G,ae="",k=0,ie,pe="",U=0,ve,de="",me=0,$,xe="",ne;if(d&&(G=y(h,"Exif",w),k=G[0].length+m*12+G[1].length),s&&(ie=y(R,"GPS",w+k),pe=ie.join(""),U=pe.length),m){var fe=w+k+U;ve=y(A,"Interop",fe),de=ve.join(""),me=de.length}if(v){var fe=w+k+U+me;if($=y(_,"1st",fe),ne=l(o.thumbnail),ne.length>64e3)throw"Given thumbnail is too large. max 64kB"}var Pe="",be="",Ce="",Re="\0\0\0\0";if(d){var O=r+w,H=u(">L",[O]),X=34665,j=u(">H",[X]),z=u(">H",[te.Long]),q=u(">L",[1]);Pe=j+z+q+H}if(s){var O=r+w+k,H=u(">L",[O]),X=34853,j=u(">H",[X]),z=u(">H",[te.Long]),q=u(">L",[1]);be=j+z+q+H}if(m){var O=r+w+k+U,H=u(">L",[O]),X=40965,j=u(">H",[X]),z=u(">H",[te.Long]),q=u(">L",[1]);Ce=j+z+q+H}if(v){var O=r+w+k+U+me;Re=u(">L",[O]);var $e=O+$[0].length+24+4+$[1].length,He="\0\0\0\0"+u(">L",[$e]),Xe="\0\0\0\0"+u(">L",[ne.length]);xe=$[0]+He+Xe+"\0\0\0\0"+$[1]+ne}var je=M[0]+Pe+be+Re+M[1];return d&&(ae=G[0]+Ce+G[1]),p+je+ae+pe+de+xe};function i(n){return JSON.parse(JSON.stringify(n))}function l(n){for(var r=B(n);"ÿà"<=r[1].slice(0,2)&&r[1].slice(0,2)<="ÿï";)r=[r[0]].concat(r.slice(2));return r.join("")}function c(n){return u(">"+D("B",n.length),n)}function f(n){return u(">"+D("H",n.length),n)}function L(n){return u(">"+D("L",n.length),n)}function S(n,r,o){var p="",d="",s,m,v,g;if(r=="Byte")s=n.length,s<=4?d=c(n)+D("\0",4-s):(d=u(">L",[o]),p=c(n));else if(r=="Short")s=n.length,s<=2?d=f(n)+D("\0\0",2-s):(d=u(">L",[o]),p=f(n));else if(r=="Long")s=n.length,s<=1?d=L(n):(d=u(">L",[o]),p=L(n));else if(r=="Ascii")m=n+"\0",s=m.length,s>4?(d=u(">L",[o]),p=m):d=m+D("\0",4-s);else if(r=="Rational"){if(typeof n[0]=="number")s=1,v=n[0],g=n[1],m=u(">L",[v])+u(">L",[g]);else{s=n.length,m="";for(var h=0;h<s;h++)v=n[h][0],g=n[h][1],m+=u(">L",[v])+u(">L",[g])}d=u(">L",[o]),p=m}else if(r=="SRational"){if(typeof n[0]=="number")s=1,v=n[0],g=n[1],m=u(">l",[v])+u(">l",[g]);else{s=n.length,m="";for(var h=0;h<s;h++)v=n[h][0],g=n[h][1],m+=u(">l",[v])+u(">l",[g])}d=u(">L",[o]),p=m}else r=="Undefined"&&(s=n.length,s>4?(d=u(">L",[o]),p=n):d=n+D("\0",4-s));var A=u(">L",[s]);return[A,d,p]}function y(n,r,o){var p=8,d=Object.keys(n).length,s=u(">H",[d]),m;["0th","1st"].indexOf(r)>-1?m=2+d*12+4:m=2+d*12;var v="",g="",h;for(var h in n)if(typeof h=="string"&&(h=parseInt(h)),!(r=="0th"&&[34665,34853].indexOf(h)>-1)){{if(r=="Exif"&&h==40965)continue;if(r=="1st"&&[513,514].indexOf(h)>-1)continue}var A=n[h],R=u(">H",[h]),_=F[r][h].type,M=u(">H",[te[_]]);typeof A=="number"&&(A=[A]);var w=p+m+o+g.length,G=S(A,_,w),ae=G[0],k=G[1],ie=G[2];v+=R+M+ae+k,g+=ie}return[s+v,g]}function C(n){var r,o;if(n.slice(0,2)=="ÿØ")r=B(n),o=ce(r),o?this.tiftag=o.slice(10):this.tiftag=null;else if(["II","MM"].indexOf(n.slice(0,2))>-1)this.tiftag=n;else if(n.slice(0,4)=="Exif")this.tiftag=n.slice(6);else throw"Given file is neither JPEG nor TIFF."}if(C.prototype={get_ifd:function(n,r){var o={},p=b(this.endian_mark+"H",this.tiftag.slice(n,n+2))[0],d=n+2,s;["0th","1st"].indexOf(r)>-1?s="Image":s=r;for(var m=0;m<p;m++){n=d+12*m;var v=b(this.endian_mark+"H",this.tiftag.slice(n,n+2))[0],g=b(this.endian_mark+"H",this.tiftag.slice(n+2,n+4))[0],h=b(this.endian_mark+"L",this.tiftag.slice(n+4,n+8))[0],A=this.tiftag.slice(n+8,n+12),R=[g,h,A];v in F[s]&&(o[v]=this.convert_value(R))}return r=="0th"&&(n=d+12*p,o.first_ifd_pointer=this.tiftag.slice(n,n+4)),o},convert_value:function(n){var r=null,o=n[0],p=n[1],d=n[2],s;if(o==1)p>4?(s=b(this.endian_mark+"L",d)[0],r=b(this.endian_mark+D("B",p),this.tiftag.slice(s,s+p))):r=b(this.endian_mark+D("B",p),d.slice(0,p));else if(o==2)p>4?(s=b(this.endian_mark+"L",d)[0],r=this.tiftag.slice(s,s+p-1)):r=d.slice(0,p-1);else if(o==3)p>2?(s=b(this.endian_mark+"L",d)[0],r=b(this.endian_mark+D("H",p),this.tiftag.slice(s,s+p*2))):r=b(this.endian_mark+D("H",p),d.slice(0,p*2));else if(o==4)p>1?(s=b(this.endian_mark+"L",d)[0],r=b(this.endian_mark+D("L",p),this.tiftag.slice(s,s+p*4))):r=b(this.endian_mark+D("L",p),d);else if(o==5)if(s=b(this.endian_mark+"L",d)[0],p>1){r=[];for(var m=0;m<p;m++)r.push([b(this.endian_mark+"L",this.tiftag.slice(s+m*8,s+4+m*8))[0],b(this.endian_mark+"L",this.tiftag.slice(s+4+m*8,s+8+m*8))[0]])}else r=[b(this.endian_mark+"L",this.tiftag.slice(s,s+4))[0],b(this.endian_mark+"L",this.tiftag.slice(s+4,s+8))[0]];else if(o==7)p>4?(s=b(this.endian_mark+"L",d)[0],r=this.tiftag.slice(s,s+p)):r=d.slice(0,p);else if(o==10)if(s=b(this.endian_mark+"L",d)[0],p>1){r=[];for(var m=0;m<p;m++)r.push([b(this.endian_mark+"l",this.tiftag.slice(s+m*8,s+4+m*8))[0],b(this.endian_mark+"l",this.tiftag.slice(s+4+m*8,s+8+m*8))[0]])}else r=[b(this.endian_mark+"l",this.tiftag.slice(s,s+4))[0],b(this.endian_mark+"l",this.tiftag.slice(s+4,s+8))[0]];else throw"Exif might be wrong. Got incorrect value type to decode. type:"+o;return r instanceof Array&&r.length==1?r[0]:r}},typeof window<"u"&&typeof window.btoa=="function")var I=window.btoa;if(typeof I>"u")var I=function(r){for(var o="",p,d,s,m,v,g,h,A=0,R="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";A<r.length;)p=r.charCodeAt(A++),d=r.charCodeAt(A++),s=r.charCodeAt(A++),m=p>>2,v=(p&3)<<4|d>>4,g=(d&15)<<2|s>>6,h=s&63,isNaN(d)?g=h=64:isNaN(s)&&(h=64),o=o+R.charAt(m)+R.charAt(v)+R.charAt(g)+R.charAt(h);return o};if(typeof window<"u"&&typeof window.atob=="function")var P=window.atob;if(typeof P>"u")var P=function(r){var o="",p,d,s,m,v,g,h,A=0,R="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";for(r=r.replace(/[^A-Za-z0-9\+\/\=]/g,"");A<r.length;)m=R.indexOf(r.charAt(A++)),v=R.indexOf(r.charAt(A++)),g=R.indexOf(r.charAt(A++)),h=R.indexOf(r.charAt(A++)),p=m<<2|v>>4,d=(v&15)<<4|g>>2,s=(g&3)<<6|h,o=o+String.fromCharCode(p),g!=64&&(o=o+String.fromCharCode(d)),h!=64&&(o=o+String.fromCharCode(s));return o};function u(n,r){if(!(r instanceof Array))throw"'pack' error. Got invalid type argument.";if(n.length-1!=r.length)throw"'pack' error. "+(n.length-1)+" marks, "+r.length+" elements.";var o;if(n[0]=="<")o=!0;else if(n[0]==">")o=!1;else throw"";for(var p="",d=1,s=null,m=null,v=null;m=n[d];){if(m.toLowerCase()=="b"){if(s=r[d-1],m=="b"&&s<0&&(s+=256),s>255||s<0)throw"'pack' error.";v=String.fromCharCode(s)}else if(m=="H"){if(s=r[d-1],s>65535||s<0)throw"'pack' error.";v=String.fromCharCode(Math.floor(s%65536/256))+String.fromCharCode(s%256),o&&(v=v.split("").reverse().join(""))}else if(m.toLowerCase()=="l"){if(s=r[d-1],m=="l"&&s<0&&(s+=4294967296),s>4294967295||s<0)throw"'pack' error.";v=String.fromCharCode(Math.floor(s/16777216))+String.fromCharCode(Math.floor(s%16777216/65536))+String.fromCharCode(Math.floor(s%65536/256))+String.fromCharCode(s%256),o&&(v=v.split("").reverse().join(""))}else throw"'pack' error.";p+=v,d+=1}return p}function b(n,r){if(typeof r!="string")throw"'unpack' error. Got invalid type argument.";for(var o=0,p=1;p<n.length;p++)if(n[p].toLowerCase()=="b")o+=1;else if(n[p].toLowerCase()=="h")o+=2;else if(n[p].toLowerCase()=="l")o+=4;else throw"'unpack' error. Got invalid mark.";if(o!=r.length)throw"'unpack' error. Mismatch between symbol and string length. "+o+":"+r.length;var d;if(n[0]=="<")d=!0;else if(n[0]==">")d=!1;else throw"'unpack' error.";for(var s=[],m=0,v=1,g=null,h=null,A=null,R="";h=n[v];){if(h.toLowerCase()=="b")A=1,R=r.slice(m,m+A),g=R.charCodeAt(0),h=="b"&&g>=128&&(g-=256);else if(h=="H")A=2,R=r.slice(m,m+A),d&&(R=R.split("").reverse().join("")),g=R.charCodeAt(0)*256+R.charCodeAt(1);else if(h.toLowerCase()=="l")A=4,R=r.slice(m,m+A),d&&(R=R.split("").reverse().join("")),g=R.charCodeAt(0)*16777216+R.charCodeAt(1)*65536+R.charCodeAt(2)*256+R.charCodeAt(3),h=="l"&&g>=2147483648&&(g-=4294967296);else throw"'unpack' error. "+h;s.push(g),m+=A,v+=1}return s}function D(n,r){for(var o="",p=0;p<r;p++)o+=n;return o}function B(n){if(n.slice(0,2)!="ÿØ")throw"Given data isn't JPEG.";for(var r=2,o=["ÿØ"];;){if(n.slice(r,r+2)=="ÿÚ"){o.push(n.slice(r));break}else{var p=b(">H",n.slice(r+2,r+4))[0],d=r+p+2;o.push(n.slice(r,d)),r=d}if(r>=n.length)throw"Wrong JPEG data."}return o}function ce(n){for(var r,o=0;o<n.length;o++)if(r=n[o],r.slice(0,2)=="ÿá"&&r.slice(4,10)=="Exif\0\0")return r;return null}function Ue(n,r){return n[1].slice(0,2)=="ÿà"&&n[2].slice(0,2)=="ÿá"&&n[2].slice(4,10)=="Exif\0\0"?r?(n[2]=r,n=["ÿØ"].concat(n.slice(2))):r==null?n=n.slice(0,2).concat(n.slice(3)):n=n.slice(0).concat(n.slice(2)):n[1].slice(0,2)=="ÿà"?r&&(n[1]=r):n[1].slice(0,2)=="ÿá"&&n[1].slice(4,10)=="Exif\0\0"?r?n[1]=r:r==null&&(n=n.slice(0).concat(n.slice(2))):r&&(n=[n[0],r].concat(n.slice(1))),n.join("")}var te={Byte:1,Ascii:2,Short:3,Long:4,Rational:5,Undefined:7,SLong:9,SRational:10},F={Image:{11:{name:"ProcessingSoftware",type:"Ascii"},254:{name:"NewSubfileType",type:"Long"},255:{name:"SubfileType",type:"Short"},256:{name:"ImageWidth",type:"Long"},257:{name:"ImageLength",type:"Long"},258:{name:"BitsPerSample",type:"Short"},259:{name:"Compression",type:"Short"},262:{name:"PhotometricInterpretation",type:"Short"},263:{name:"Threshholding",type:"Short"},264:{name:"CellWidth",type:"Short"},265:{name:"CellLength",type:"Short"},266:{name:"FillOrder",type:"Short"},269:{name:"DocumentName",type:"Ascii"},270:{name:"ImageDescription",type:"Ascii"},271:{name:"Make",type:"Ascii"},272:{name:"Model",type:"Ascii"},273:{name:"StripOffsets",type:"Long"},274:{name:"Orientation",type:"Short"},277:{name:"SamplesPerPixel",type:"Short"},278:{name:"RowsPerStrip",type:"Long"},279:{name:"StripByteCounts",type:"Long"},282:{name:"XResolution",type:"Rational"},283:{name:"YResolution",type:"Rational"},284:{name:"PlanarConfiguration",type:"Short"},290:{name:"GrayResponseUnit",type:"Short"},291:{name:"GrayResponseCurve",type:"Short"},292:{name:"T4Options",type:"Long"},293:{name:"T6Options",type:"Long"},296:{name:"ResolutionUnit",type:"Short"},301:{name:"TransferFunction",type:"Short"},305:{name:"Software",type:"Ascii"},306:{name:"DateTime",type:"Ascii"},315:{name:"Artist",type:"Ascii"},316:{name:"HostComputer",type:"Ascii"},317:{name:"Predictor",type:"Short"},318:{name:"WhitePoint",type:"Rational"},319:{name:"PrimaryChromaticities",type:"Rational"},320:{name:"ColorMap",type:"Short"},321:{name:"HalftoneHints",type:"Short"},322:{name:"TileWidth",type:"Short"},323:{name:"TileLength",type:"Short"},324:{name:"TileOffsets",type:"Short"},325:{name:"TileByteCounts",type:"Short"},330:{name:"SubIFDs",type:"Long"},332:{name:"InkSet",type:"Short"},333:{name:"InkNames",type:"Ascii"},334:{name:"NumberOfInks",type:"Short"},336:{name:"DotRange",type:"Byte"},337:{name:"TargetPrinter",type:"Ascii"},338:{name:"ExtraSamples",type:"Short"},339:{name:"SampleFormat",type:"Short"},340:{name:"SMinSampleValue",type:"Short"},341:{name:"SMaxSampleValue",type:"Short"},342:{name:"TransferRange",type:"Short"},343:{name:"ClipPath",type:"Byte"},344:{name:"XClipPathUnits",type:"Long"},345:{name:"YClipPathUnits",type:"Long"},346:{name:"Indexed",type:"Short"},347:{name:"JPEGTables",type:"Undefined"},351:{name:"OPIProxy",type:"Short"},512:{name:"JPEGProc",type:"Long"},513:{name:"JPEGInterchangeFormat",type:"Long"},514:{name:"JPEGInterchangeFormatLength",type:"Long"},515:{name:"JPEGRestartInterval",type:"Short"},517:{name:"JPEGLosslessPredictors",type:"Short"},518:{name:"JPEGPointTransforms",type:"Short"},519:{name:"JPEGQTables",type:"Long"},520:{name:"JPEGDCTables",type:"Long"},521:{name:"JPEGACTables",type:"Long"},529:{name:"YCbCrCoefficients",type:"Rational"},530:{name:"YCbCrSubSampling",type:"Short"},531:{name:"YCbCrPositioning",type:"Short"},532:{name:"ReferenceBlackWhite",type:"Rational"},700:{name:"XMLPacket",type:"Byte"},18246:{name:"Rating",type:"Short"},18249:{name:"RatingPercent",type:"Short"},32781:{name:"ImageID",type:"Ascii"},33421:{name:"CFARepeatPatternDim",type:"Short"},33422:{name:"CFAPattern",type:"Byte"},33423:{name:"BatteryLevel",type:"Rational"},33432:{name:"Copyright",type:"Ascii"},33434:{name:"ExposureTime",type:"Rational"},34377:{name:"ImageResources",type:"Byte"},34665:{name:"ExifTag",type:"Long"},34675:{name:"InterColorProfile",type:"Undefined"},34853:{name:"GPSTag",type:"Long"},34857:{name:"Interlace",type:"Short"},34858:{name:"TimeZoneOffset",type:"Long"},34859:{name:"SelfTimerMode",type:"Short"},37387:{name:"FlashEnergy",type:"Rational"},37388:{name:"SpatialFrequencyResponse",type:"Undefined"},37389:{name:"Noise",type:"Undefined"},37390:{name:"FocalPlaneXResolution",type:"Rational"},37391:{name:"FocalPlaneYResolution",type:"Rational"},37392:{name:"FocalPlaneResolutionUnit",type:"Short"},37393:{name:"ImageNumber",type:"Long"},37394:{name:"SecurityClassification",type:"Ascii"},37395:{name:"ImageHistory",type:"Ascii"},37397:{name:"ExposureIndex",type:"Rational"},37398:{name:"TIFFEPStandardID",type:"Byte"},37399:{name:"SensingMethod",type:"Short"},40091:{name:"XPTitle",type:"Byte"},40092:{name:"XPComment",type:"Byte"},40093:{name:"XPAuthor",type:"Byte"},40094:{name:"XPKeywords",type:"Byte"},40095:{name:"XPSubject",type:"Byte"},50341:{name:"PrintImageMatching",type:"Undefined"},50706:{name:"DNGVersion",type:"Byte"},50707:{name:"DNGBackwardVersion",type:"Byte"},50708:{name:"UniqueCameraModel",type:"Ascii"},50709:{name:"LocalizedCameraModel",type:"Byte"},50710:{name:"CFAPlaneColor",type:"Byte"},50711:{name:"CFALayout",type:"Short"},50712:{name:"LinearizationTable",type:"Short"},50713:{name:"BlackLevelRepeatDim",type:"Short"},50714:{name:"BlackLevel",type:"Rational"},50715:{name:"BlackLevelDeltaH",type:"SRational"},50716:{name:"BlackLevelDeltaV",type:"SRational"},50717:{name:"WhiteLevel",type:"Short"},50718:{name:"DefaultScale",type:"Rational"},50719:{name:"DefaultCropOrigin",type:"Short"},50720:{name:"DefaultCropSize",type:"Short"},50721:{name:"ColorMatrix1",type:"SRational"},50722:{name:"ColorMatrix2",type:"SRational"},50723:{name:"CameraCalibration1",type:"SRational"},50724:{name:"CameraCalibration2",type:"SRational"},50725:{name:"ReductionMatrix1",type:"SRational"},50726:{name:"ReductionMatrix2",type:"SRational"},50727:{name:"AnalogBalance",type:"Rational"},50728:{name:"AsShotNeutral",type:"Short"},50729:{name:"AsShotWhiteXY",type:"Rational"},50730:{name:"BaselineExposure",type:"SRational"},50731:{name:"BaselineNoise",type:"Rational"},50732:{name:"BaselineSharpness",type:"Rational"},50733:{name:"BayerGreenSplit",type:"Long"},50734:{name:"LinearResponseLimit",type:"Rational"},50735:{name:"CameraSerialNumber",type:"Ascii"},50736:{name:"LensInfo",type:"Rational"},50737:{name:"ChromaBlurRadius",type:"Rational"},50738:{name:"AntiAliasStrength",type:"Rational"},50739:{name:"ShadowScale",type:"SRational"},50740:{name:"DNGPrivateData",type:"Byte"},50741:{name:"MakerNoteSafety",type:"Short"},50778:{name:"CalibrationIlluminant1",type:"Short"},50779:{name:"CalibrationIlluminant2",type:"Short"},50780:{name:"BestQualityScale",type:"Rational"},50781:{name:"RawDataUniqueID",type:"Byte"},50827:{name:"OriginalRawFileName",type:"Byte"},50828:{name:"OriginalRawFileData",type:"Undefined"},50829:{name:"ActiveArea",type:"Short"},50830:{name:"MaskedAreas",type:"Short"},50831:{name:"AsShotICCProfile",type:"Undefined"},50832:{name:"AsShotPreProfileMatrix",type:"SRational"},50833:{name:"CurrentICCProfile",type:"Undefined"},50834:{name:"CurrentPreProfileMatrix",type:"SRational"},50879:{name:"ColorimetricReference",type:"Short"},50931:{name:"CameraCalibrationSignature",type:"Byte"},50932:{name:"ProfileCalibrationSignature",type:"Byte"},50934:{name:"AsShotProfileName",type:"Byte"},50935:{name:"NoiseReductionApplied",type:"Rational"},50936:{name:"ProfileName",type:"Byte"},50937:{name:"ProfileHueSatMapDims",type:"Long"},50938:{name:"ProfileHueSatMapData1",type:"Float"},50939:{name:"ProfileHueSatMapData2",type:"Float"},50940:{name:"ProfileToneCurve",type:"Float"},50941:{name:"ProfileEmbedPolicy",type:"Long"},50942:{name:"ProfileCopyright",type:"Byte"},50964:{name:"ForwardMatrix1",type:"SRational"},50965:{name:"ForwardMatrix2",type:"SRational"},50966:{name:"PreviewApplicationName",type:"Byte"},50967:{name:"PreviewApplicationVersion",type:"Byte"},50968:{name:"PreviewSettingsName",type:"Byte"},50969:{name:"PreviewSettingsDigest",type:"Byte"},50970:{name:"PreviewColorSpace",type:"Long"},50971:{name:"PreviewDateTime",type:"Ascii"},50972:{name:"RawImageDigest",type:"Undefined"},50973:{name:"OriginalRawFileDigest",type:"Undefined"},50974:{name:"SubTileBlockSize",type:"Long"},50975:{name:"RowInterleaveFactor",type:"Long"},50981:{name:"ProfileLookTableDims",type:"Long"},50982:{name:"ProfileLookTableData",type:"Float"},51008:{name:"OpcodeList1",type:"Undefined"},51009:{name:"OpcodeList2",type:"Undefined"},51022:{name:"OpcodeList3",type:"Undefined"}},Exif:{33434:{name:"ExposureTime",type:"Rational"},33437:{name:"FNumber",type:"Rational"},34850:{name:"ExposureProgram",type:"Short"},34852:{name:"SpectralSensitivity",type:"Ascii"},34855:{name:"ISOSpeedRatings",type:"Short"},34856:{name:"OECF",type:"Undefined"},34864:{name:"SensitivityType",type:"Short"},34865:{name:"StandardOutputSensitivity",type:"Long"},34866:{name:"RecommendedExposureIndex",type:"Long"},34867:{name:"ISOSpeed",type:"Long"},34868:{name:"ISOSpeedLatitudeyyy",type:"Long"},34869:{name:"ISOSpeedLatitudezzz",type:"Long"},36864:{name:"ExifVersion",type:"Undefined"},36867:{name:"DateTimeOriginal",type:"Ascii"},36868:{name:"DateTimeDigitized",type:"Ascii"},37121:{name:"ComponentsConfiguration",type:"Undefined"},37122:{name:"CompressedBitsPerPixel",type:"Rational"},37377:{name:"ShutterSpeedValue",type:"SRational"},37378:{name:"ApertureValue",type:"Rational"},37379:{name:"BrightnessValue",type:"SRational"},37380:{name:"ExposureBiasValue",type:"SRational"},37381:{name:"MaxApertureValue",type:"Rational"},37382:{name:"SubjectDistance",type:"Rational"},37383:{name:"MeteringMode",type:"Short"},37384:{name:"LightSource",type:"Short"},37385:{name:"Flash",type:"Short"},37386:{name:"FocalLength",type:"Rational"},37396:{name:"SubjectArea",type:"Short"},37500:{name:"MakerNote",type:"Undefined"},37510:{name:"UserComment",type:"Ascii"},37520:{name:"SubSecTime",type:"Ascii"},37521:{name:"SubSecTimeOriginal",type:"Ascii"},37522:{name:"SubSecTimeDigitized",type:"Ascii"},40960:{name:"FlashpixVersion",type:"Undefined"},40961:{name:"ColorSpace",type:"Short"},40962:{name:"PixelXDimension",type:"Long"},40963:{name:"PixelYDimension",type:"Long"},40964:{name:"RelatedSoundFile",type:"Ascii"},40965:{name:"InteroperabilityTag",type:"Long"},41483:{name:"FlashEnergy",type:"Rational"},41484:{name:"SpatialFrequencyResponse",type:"Undefined"},41486:{name:"FocalPlaneXResolution",type:"Rational"},41487:{name:"FocalPlaneYResolution",type:"Rational"},41488:{name:"FocalPlaneResolutionUnit",type:"Short"},41492:{name:"SubjectLocation",type:"Short"},41493:{name:"ExposureIndex",type:"Rational"},41495:{name:"SensingMethod",type:"Short"},41728:{name:"FileSource",type:"Undefined"},41729:{name:"SceneType",type:"Undefined"},41730:{name:"CFAPattern",type:"Undefined"},41985:{name:"CustomRendered",type:"Short"},41986:{name:"ExposureMode",type:"Short"},41987:{name:"WhiteBalance",type:"Short"},41988:{name:"DigitalZoomRatio",type:"Rational"},41989:{name:"FocalLengthIn35mmFilm",type:"Short"},41990:{name:"SceneCaptureType",type:"Short"},41991:{name:"GainControl",type:"Short"},41992:{name:"Contrast",type:"Short"},41993:{name:"Saturation",type:"Short"},41994:{name:"Sharpness",type:"Short"},41995:{name:"DeviceSettingDescription",type:"Undefined"},41996:{name:"SubjectDistanceRange",type:"Short"},42016:{name:"ImageUniqueID",type:"Ascii"},42032:{name:"CameraOwnerName",type:"Ascii"},42033:{name:"BodySerialNumber",type:"Ascii"},42034:{name:"LensSpecification",type:"Rational"},42035:{name:"LensMake",type:"Ascii"},42036:{name:"LensModel",type:"Ascii"},42037:{name:"LensSerialNumber",type:"Ascii"},42240:{name:"Gamma",type:"Rational"}},GPS:{0:{name:"GPSVersionID",type:"Byte"},1:{name:"GPSLatitudeRef",type:"Ascii"},2:{name:"GPSLatitude",type:"Rational"},3:{name:"GPSLongitudeRef",type:"Ascii"},4:{name:"GPSLongitude",type:"Rational"},5:{name:"GPSAltitudeRef",type:"Byte"},6:{name:"GPSAltitude",type:"Rational"},7:{name:"GPSTimeStamp",type:"Rational"},8:{name:"GPSSatellites",type:"Ascii"},9:{name:"GPSStatus",type:"Ascii"},10:{name:"GPSMeasureMode",type:"Ascii"},11:{name:"GPSDOP",type:"Rational"},12:{name:"GPSSpeedRef",type:"Ascii"},13:{name:"GPSSpeed",type:"Rational"},14:{name:"GPSTrackRef",type:"Ascii"},15:{name:"GPSTrack",type:"Rational"},16:{name:"GPSImgDirectionRef",type:"Ascii"},17:{name:"GPSImgDirection",type:"Rational"},18:{name:"GPSMapDatum",type:"Ascii"},19:{name:"GPSDestLatitudeRef",type:"Ascii"},20:{name:"GPSDestLatitude",type:"Rational"},21:{name:"GPSDestLongitudeRef",type:"Ascii"},22:{name:"GPSDestLongitude",type:"Rational"},23:{name:"GPSDestBearingRef",type:"Ascii"},24:{name:"GPSDestBearing",type:"Rational"},25:{name:"GPSDestDistanceRef",type:"Ascii"},26:{name:"GPSDestDistance",type:"Rational"},27:{name:"GPSProcessingMethod",type:"Undefined"},28:{name:"GPSAreaInformation",type:"Undefined"},29:{name:"GPSDateStamp",type:"Ascii"},30:{name:"GPSDifferential",type:"Short"},31:{name:"GPSHPositioningError",type:"Rational"}},Interop:{1:{name:"InteroperabilityIndex",type:"Ascii"}}};F["0th"]=F.Image,F["1st"]=F.Image,a.TAGS=F,a.ImageIFD={ProcessingSoftware:11,NewSubfileType:254,SubfileType:255,ImageWidth:256,ImageLength:257,BitsPerSample:258,Compression:259,PhotometricInterpretation:262,Threshholding:263,CellWidth:264,CellLength:265,FillOrder:266,DocumentName:269,ImageDescription:270,Make:271,Model:272,StripOffsets:273,Orientation:274,SamplesPerPixel:277,RowsPerStrip:278,StripByteCounts:279,XResolution:282,YResolution:283,PlanarConfiguration:284,GrayResponseUnit:290,GrayResponseCurve:291,T4Options:292,T6Options:293,ResolutionUnit:296,TransferFunction:301,Software:305,DateTime:306,Artist:315,HostComputer:316,Predictor:317,WhitePoint:318,PrimaryChromaticities:319,ColorMap:320,HalftoneHints:321,TileWidth:322,TileLength:323,TileOffsets:324,TileByteCounts:325,SubIFDs:330,InkSet:332,InkNames:333,NumberOfInks:334,DotRange:336,TargetPrinter:337,ExtraSamples:338,SampleFormat:339,SMinSampleValue:340,SMaxSampleValue:341,TransferRange:342,ClipPath:343,XClipPathUnits:344,YClipPathUnits:345,Indexed:346,JPEGTables:347,OPIProxy:351,JPEGProc:512,JPEGInterchangeFormat:513,JPEGInterchangeFormatLength:514,JPEGRestartInterval:515,JPEGLosslessPredictors:517,JPEGPointTransforms:518,JPEGQTables:519,JPEGDCTables:520,JPEGACTables:521,YCbCrCoefficients:529,YCbCrSubSampling:530,YCbCrPositioning:531,ReferenceBlackWhite:532,XMLPacket:700,Rating:18246,RatingPercent:18249,ImageID:32781,CFARepeatPatternDim:33421,CFAPattern:33422,BatteryLevel:33423,Copyright:33432,ExposureTime:33434,ImageResources:34377,ExifTag:34665,InterColorProfile:34675,GPSTag:34853,Interlace:34857,TimeZoneOffset:34858,SelfTimerMode:34859,FlashEnergy:37387,SpatialFrequencyResponse:37388,Noise:37389,FocalPlaneXResolution:37390,FocalPlaneYResolution:37391,FocalPlaneResolutionUnit:37392,ImageNumber:37393,SecurityClassification:37394,ImageHistory:37395,ExposureIndex:37397,TIFFEPStandardID:37398,SensingMethod:37399,XPTitle:40091,XPComment:40092,XPAuthor:40093,XPKeywords:40094,XPSubject:40095,PrintImageMatching:50341,DNGVersion:50706,DNGBackwardVersion:50707,UniqueCameraModel:50708,LocalizedCameraModel:50709,CFAPlaneColor:50710,CFALayout:50711,LinearizationTable:50712,BlackLevelRepeatDim:50713,BlackLevel:50714,BlackLevelDeltaH:50715,BlackLevelDeltaV:50716,WhiteLevel:50717,DefaultScale:50718,DefaultCropOrigin:50719,DefaultCropSize:50720,ColorMatrix1:50721,ColorMatrix2:50722,CameraCalibration1:50723,CameraCalibration2:50724,ReductionMatrix1:50725,ReductionMatrix2:50726,AnalogBalance:50727,AsShotNeutral:50728,AsShotWhiteXY:50729,BaselineExposure:50730,BaselineNoise:50731,BaselineSharpness:50732,BayerGreenSplit:50733,LinearResponseLimit:50734,CameraSerialNumber:50735,LensInfo:50736,ChromaBlurRadius:50737,AntiAliasStrength:50738,ShadowScale:50739,DNGPrivateData:50740,MakerNoteSafety:50741,CalibrationIlluminant1:50778,CalibrationIlluminant2:50779,BestQualityScale:50780,RawDataUniqueID:50781,OriginalRawFileName:50827,OriginalRawFileData:50828,ActiveArea:50829,MaskedAreas:50830,AsShotICCProfile:50831,AsShotPreProfileMatrix:50832,CurrentICCProfile:50833,CurrentPreProfileMatrix:50834,ColorimetricReference:50879,CameraCalibrationSignature:50931,ProfileCalibrationSignature:50932,AsShotProfileName:50934,NoiseReductionApplied:50935,ProfileName:50936,ProfileHueSatMapDims:50937,ProfileHueSatMapData1:50938,ProfileHueSatMapData2:50939,ProfileToneCurve:50940,ProfileEmbedPolicy:50941,ProfileCopyright:50942,ForwardMatrix1:50964,ForwardMatrix2:50965,PreviewApplicationName:50966,PreviewApplicationVersion:50967,PreviewSettingsName:50968,PreviewSettingsDigest:50969,PreviewColorSpace:50970,PreviewDateTime:50971,RawImageDigest:50972,OriginalRawFileDigest:50973,SubTileBlockSize:50974,RowInterleaveFactor:50975,ProfileLookTableDims:50981,ProfileLookTableData:50982,OpcodeList1:51008,OpcodeList2:51009,OpcodeList3:51022,NoiseProfile:51041},a.ExifIFD={ExposureTime:33434,FNumber:33437,ExposureProgram:34850,SpectralSensitivity:34852,ISOSpeedRatings:34855,OECF:34856,SensitivityType:34864,StandardOutputSensitivity:34865,RecommendedExposureIndex:34866,ISOSpeed:34867,ISOSpeedLatitudeyyy:34868,ISOSpeedLatitudezzz:34869,ExifVersion:36864,DateTimeOriginal:36867,DateTimeDigitized:36868,ComponentsConfiguration:37121,CompressedBitsPerPixel:37122,ShutterSpeedValue:37377,ApertureValue:37378,BrightnessValue:37379,ExposureBiasValue:37380,MaxApertureValue:37381,SubjectDistance:37382,MeteringMode:37383,LightSource:37384,Flash:37385,FocalLength:37386,SubjectArea:37396,MakerNote:37500,UserComment:37510,SubSecTime:37520,SubSecTimeOriginal:37521,SubSecTimeDigitized:37522,FlashpixVersion:40960,ColorSpace:40961,PixelXDimension:40962,PixelYDimension:40963,RelatedSoundFile:40964,InteroperabilityTag:40965,FlashEnergy:41483,SpatialFrequencyResponse:41484,FocalPlaneXResolution:41486,FocalPlaneYResolution:41487,FocalPlaneResolutionUnit:41488,SubjectLocation:41492,ExposureIndex:41493,SensingMethod:41495,FileSource:41728,SceneType:41729,CFAPattern:41730,CustomRendered:41985,ExposureMode:41986,WhiteBalance:41987,DigitalZoomRatio:41988,FocalLengthIn35mmFilm:41989,SceneCaptureType:41990,GainControl:41991,Contrast:41992,Saturation:41993,Sharpness:41994,DeviceSettingDescription:41995,SubjectDistanceRange:41996,ImageUniqueID:42016,CameraOwnerName:42032,BodySerialNumber:42033,LensSpecification:42034,LensMake:42035,LensModel:42036,LensSerialNumber:42037,Gamma:42240},a.GPSIFD={GPSVersionID:0,GPSLatitudeRef:1,GPSLatitude:2,GPSLongitudeRef:3,GPSLongitude:4,GPSAltitudeRef:5,GPSAltitude:6,GPSTimeStamp:7,GPSSatellites:8,GPSStatus:9,GPSMeasureMode:10,GPSDOP:11,GPSSpeedRef:12,GPSSpeed:13,GPSTrackRef:14,GPSTrack:15,GPSImgDirectionRef:16,GPSImgDirection:17,GPSMapDatum:18,GPSDestLatitudeRef:19,GPSDestLatitude:20,GPSDestLongitudeRef:21,GPSDestLongitude:22,GPSDestBearingRef:23,GPSDestBearing:24,GPSDestDistanceRef:25,GPSDestDistance:26,GPSProcessingMethod:27,GPSAreaInformation:28,GPSDateStamp:29,GPSDifferential:30,GPSHPositioningError:31},a.InteropIFD={InteroperabilityIndex:1},a.GPSHelper={degToDmsRational:function(n){var r=n%1*60,o=r%1*60,p=Math.floor(n),d=Math.floor(r),s=Math.round(o*100);return[[p,1],[d,1],[s,100]]},dmsRationalToDeg:function(n,r){var o=r==="S"||r==="W"?-1:1,p=o*n[0][0]/n[0][1]+n[1][0]/n[1][1]/60+n[2][0]/n[2][1]/3600;return p}},e.exports&&(t=e.exports=a),t.piexif=a})()})(we,we.exports);const{getState:T}=ge,Et=async()=>{const e=await T().stats,t=await T().updateRank,a=await T().updateValue,i=await T().updateCost,l=await T().deleteCost,c=await T().updateName,f=await T().updateType,L=await T().updateCardType,S=await T().updateDesigner,y=await T().updateArtist;await T().updateRules;const C=()=>{var P=document.createElement("a");const u=e.name.split(" ").join("-");P.download=`${u}.jpg`,P.href=document.querySelector("#imageCanvas").toDataURL(),P.click()};function I(P){const u=document.querySelector(".all-icons-image"),b=u.width/10,D=u.height/7,B=P.offsetX,ce=P.offsetY;i([Math.floor(B/b),Math.floor(ce/D)])}return N`
    <h2 style="width: 100%">Editing Tools: <button style="float:right" onclick=${C}>Generate Card</button></h2>
    <hr/>
        ${Y({title:"Card name",placeholder:"Card name",value:e.name,handleKeyPress:P=>c(P.target.value)})}
    <hr/>
      <div>${Y({title:"Card Type",placeholder:"",value:e.cardType,handleKeyPress:P=>L(P.target.value)})} </div>
    <hr/>
      ${Y({title:"Designer",placeholder:"Your name or Reddit username",value:e.designer,handleKeyPress:P=>S(P.target.value)})}
    <hr/>
      ${Y({title:"Artist",placeholder:"Artist",value:e.artist,handleKeyPress:P=>y(P.target.value)})}
        ${await kt()}
    <hr/>
    <div onclick=${P=>{P.target.type,f(P.target.value)}}><!-- TODO: ignore non-radio button clicks -->
      <div>Card type:</div>
      <input type="radio" id="white" name="card-type" value="white" ?checked=${e.type==="white"}>
      <label for="white">white</label> | 
      <input type="radio" id="blue" name="card-type" value="blue" ?checked=${e.type==="blue"}>
      <label for="blue">blue</label> | 
      <input type="radio" id="black" name="card-type" value="black" ?checked=${e.type==="black"}>
      <label for="black">black</label> | 
      <input type="radio" id="red" name="card-type" value="red" ?checked=${e.type==="red"}>
      <label for="red">red</label> | 
      <input type="radio" id="green" name="card-type" value="green" ?checked=${e.type==="green"}>
      <label for="green">green</label> | 
      <input type="radio" id="gold" name="card-type" value="gold" ?checked=${e.type==="gold"}>
      <label for="gold">gold</label> | 
      <input type="radio" id="artifact" name="card-type" value="artifact" ?checked=${e.type==="artifact"}>
      <label for="artifact">artifact</label>
      <input type="radio" id="land" name="card-type" value="land" ?checked=${e.type==="land"}>
      <label for="land">land</label>
    </div>
    <hr/>
        <div>Rarity/Power Attributes:</div>
        <div>${Y({title:"Power & Toughness",placeholder:"",value:e.value,handleKeyPress:P=>a(P.target.value)})} </div>
        <div>${Gt({values:[["1","Common"],["2","Uncommon"],["3","Rare"],["4","Mythic"]],title:"Rarity",currentSelection:"1",handleOnChange:P=>{t(P.target.value)}})} </div>
        <div> 
        <details>
        <summary>Card Cost:</summary>
          <img src="/icons/mana.svg" class="all-icons-image" onclick=${I}>
          <div><button onclick=${l}>Delete</button></div>
        </details>
        </div>
    <hr/>
    <div class="small-text">Click the "set rules" button to update rules text. Click the "generate card" button above to create card.</div> 
    `},{subscribe:Ot,getState:Ft}=ge;let E=document.querySelectorAll(".border-image"),V=document.querySelectorAll(".rank-image"),K=document.querySelectorAll(".type-image"),Z=document.querySelectorAll(".circle-icon"),Me=document.querySelector(".all-icons"),Ne=document.querySelector("#app"),ee=document.getElementById("imageCanvas"),x=ee.getContext("2d");const Ge={white:E[0],blue:E[1],black:E[2],red:E[3],green:E[4],gold:E[5],artifact:E[6],land:E[7]};V[0],V[1],V[2],V[3];K[0],K[1],K[2],K[3];document.getElementById("imageCanvas")&&(E=document.querySelectorAll(".border-image"),V=document.querySelectorAll(".rank-image"),K=document.querySelectorAll(".type-image"),Z=document.querySelectorAll(".circle-icon"),Me=document.querySelector(".all-icons"),Ne=document.querySelector("#app"),ee=document.getElementById("imageCanvas"),x=ee.getContext("2d"));Se();window.addEventListener("load",Se);Ot(Se);async function Se(){document.querySelector(".all-icons").src="./icons/mana.svg",document.querySelector(".all-icons-image").src="./icons/mana.svg",Tt(Ne,N`${await Et()}`),_e()}document.querySelector("#set-rules").addEventListener("click",e=>{_e();const t=document.querySelector(".carotaEditorCanvas");x.drawImage(t,100,660,590,450)});function _e(){x.clearRect(0,0,ee.width,ee.height);const e=Ft().stats,t=e.img.img;if(t){const c=t.height/t.width;x.drawImage(t,0,0,t.width,t.height,e.img.x,e.img.y,e.img.width,e.img.width*c)}Ge[e.type]&&x.drawImage(Ge[e.type],0,0),x.font="36px 'EB Garamond', serif",x.fillStyle="#000",x.fillText(`${ke(e.cardType)}`,81,637),x.fillStyle="#fff",x.fillText(`${ke(e.cardType)}`,80,636),x.font="60px 'EB Garamond', serif",x.fillStyle="#000",x.fillText(e.value,642,1027),x.fillStyle="#fff",x.fillText(e.value,640,1025),x.font="40px 'MedievalSharp', cursive",x.fillStyle="#000",x.fillText(e.name,76,86),x.fillStyle="#fff",x.fillText(e.name,75,85),x.font="30px 'EB Garamond', serif",x.fillStyle="#000",e.rank==="1"&&e.type!=="land"&&(x.fillText("Basic landcycling       (     , Discard this card: Search",100,890),x.fillText("your library for a basic land card, reveal it, put it",100,920),x.fillText("into your hand, then shuffle.)",100,950),x.drawImage(Z[1],0,0,120,120,300,867,100,100),x.drawImage(Z[1],0,0,120,120,344,867,100,100)),e.type==="land"&&(x.fillText("Cycling       (     , Discard this card: Draw a card.)",100,940),x.drawImage(Z[2],0,0,120,120,195,918,100,100),x.drawImage(Z[2],0,0,120,120,238,918,100,100)),x.font="14px 'EB Garamond', serif",x.fillStyle="#adadad",x.fillText("✎ "+e.designer+" ⦾ "+e.artist,80,1073);const a=685;let i=0;const l=[...e.cost].reverse();for(let c=0;c<l.length;c++){const f=l[c];x.drawImage(Me,f[0]*105,f[1]*105.2,105,100,a-i*45,50,41,41),i++}}function ke(e){if(typeof e=="string")return e.charAt(0).toUpperCase()+e.slice(1)}
